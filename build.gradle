buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
    }
}

apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "maven-publish"
apply plugin: "io.spring.dependency-management"

// apply from: "gradle/funcTest.gradle"

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.69'
    }
}

dependencies {
    // Gradle/Groovy
    compile localGroovy()
    compile gradleApi()
    // AWS
    compile("com.amazonaws:aws-java-sdk-autoscaling")
    compile("com.amazonaws:aws-java-sdk-config")
    compile("com.amazonaws:aws-java-sdk-core")
    compile("com.amazonaws:aws-java-sdk-ec2")
    compile("com.amazonaws:aws-java-sdk-ecs")
    compile("com.amazonaws:aws-java-sdk-iam")
    compile("com.amazonaws:aws-java-sdk-s3")
    compile("com.amazonaws:aws-java-sdk-sts")
    // Guava
    compile("com.google.guava:guava:19.0")
    // Specification Testing
    testCompile gradleTestKit()
    testCompile("cglib:cglib-nodep:2.2")
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude module: "groovy-all"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

group   = "com.n3integration"
version = "1.0.0"

ext.compatibilityVersion = "1.7"
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

jar {
    manifest {
        attributes "Implementation-Title": "Gradle AWS plugin",
                   "Implementation-Version": version,
                   "Built-By": "n3integration",
                   "Built-Date": new Date(),
                   "Built-JDK": System.getProperty("java.version"),
                   "Built-Gradle": gradle.gradleVersion
    }
}

idea.project {
    jdkName = "1.8"
    languageLevel = compatibilityVersion

    ipr.withXml { provider ->
        def node = provider.asNode()

        // Use GIT
        def vcsConfig = node.component.find { it."@name" == "VcsDirectoryMappings" }
        vcsConfig.mapping[0]."@vcs" = "Git"

        // Set Gradle home
        def gradleSettings = node.appendNode("component", [name: "GradleSettings"])
        gradleSettings.appendNode("option", [name: "SDK_HOME", value: gradle.gradleHomeDir])
    }
}

